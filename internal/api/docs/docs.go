// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/adjustment": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List salary adjustments with pagination, filtering and sorting.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "List Adjustments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit (set 0 for no limit)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page (set 0 for no pagination)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (e.g., adjustment_date, created_at, amount)",
                        "name": "sort_field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (ASC or DESC)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by adjustment type (e.g., bonus, penalty)",
                        "name": "adjustment_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by active status (true or false)",
                        "name": "is_active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of adjustments",
                        "schema": {
                            "$ref": "#/definitions/user.AdjustmentList"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new salary adjustment (bonus/penalty) for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Create Adjustment",
                "parameters": [
                    {
                        "description": "Adjustment Request",
                        "name": "adjustment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.AdjustmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Adjustment created successfully",
                        "schema": {
                            "$ref": "#/definitions/user.AdjustmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/adjustment/{adjustment_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a salary adjustment record by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Get Adjustment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adjustment ID",
                        "name": "adjustment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Adjustment data returned",
                        "schema": {
                            "$ref": "#/definitions/user.AdjustmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing salary adjustment record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Update Adjustment",
                "parameters": [
                    {
                        "description": "Adjustment Update Request",
                        "name": "adjustment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.AdjustmentUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Adjustment ID",
                        "name": "adjustment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Adjustment updated successfully",
                        "schema": {
                            "$ref": "#/definitions/user.AdjustmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/adjustment/{adjustment_id}/close": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mark an adjustment as inactive (close it).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Close Adjustment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adjustment ID",
                        "name": "adjustment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Adjustment closed successfully",
                        "schema": {
                            "$ref": "#/definitions/user.AdjustmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/branches/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Create Branch",
                "parameters": [
                    {
                        "description": "Branch details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/company.CreateBranchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.BranchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/branches/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all branches for a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "List Branches",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.ListBranchesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/branches/{branch_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get branch details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Get Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.BranchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update branch details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Update Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated branch details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/company.UpdateBranchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.BranchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a branch by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Delete Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cash-flow": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of cash flow transactions for a company based on a given date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cash Flow"
                ],
                "summary": "Get cash flow details for a company within a given date range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit of records per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter transactions by description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type (income | expense)",
                        "name": "transaction_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Payment Method (uzs | usd | card)",
                        "name": "payment_method",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Branch ID of the company",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cash flow transactions with pagination details",
                        "schema": {
                            "$ref": "#/definitions/products.ListCashFlow"
                        }
                    },
                    "400": {
                        "description": "Invalid input parameters or missing required values",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/cash-flow/expense": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an expense record in the cash flow system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cash Flow"
                ],
                "summary": "Create an expense cash flow transaction for a company",
                "parameters": [
                    {
                        "description": "Expense Cash Flow Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/products.CashFlowRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.CashFlow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/cash-flow/income": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create an income record in the cash flow system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cash Flow"
                ],
                "summary": "Create an income cash flow transaction for a company",
                "parameters": [
                    {
                        "description": "Income Cash Flow Data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/products.CashFlowRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.CashFlow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of clients with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "List all clients",
                "parameters": [
                    {
                        "type": "string",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "client_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "full_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "phone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ClientListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new client with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "parameters": [
                    {
                        "description": "Client data",
                        "name": "Client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ClientRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/clients/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a client by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Get a client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of an existing client by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Update an existing client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated client data",
                        "name": "Client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a client by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get company details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get Company",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update company details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Update Company",
                "parameters": [
                    {
                        "description": "Updated company details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/companies/admin": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Companies"
                ],
                "summary": "Create Company",
                "parameters": [
                    {
                        "description": "Company details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/companies/admin/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Companies"
                ],
                "summary": "Get All Companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/company.CompanyResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/companies/admin/{company_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get company details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Companies"
                ],
                "summary": "Get Company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update company details admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Companies"
                ],
                "summary": "Update Company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated company details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a company by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Companies"
                ],
                "summary": "Delete Company",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/companies/admin/{company_id}/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all users for a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Companies"
                ],
                "summary": "ListCompanyUsersA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/company.ListCompanyUsersResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new user for a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Companies"
                ],
                "summary": "Create Company User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company user details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateUserToCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/companies/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all users for a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "ListCompanyUsers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/company.ListCompanyUsersResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new user for a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Create Company User",
                "parameters": [
                    {
                        "description": "Company user details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateUserToCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/company.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/creditor": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of creditor records with optional filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "List creditor records",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by fully paid status",
                        "name": "is_fully_pay",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by currency code",
                        "name": "currency_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by unpaid credits",
                        "name": "no_paid_credits",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of creditor records",
                        "schema": {
                            "$ref": "#/definitions/debts.DebtsList"
                        }
                    },
                    "400": {
                        "description": "Invalid filter value",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new creditor record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "Create creditor",
                "parameters": [
                    {
                        "description": "Creditor details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DebtsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created creditor record",
                        "schema": {
                            "$ref": "#/definitions/debts.Debts"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/pay": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Make a payment toward a creditor record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "Process creditor payment",
                "parameters": [
                    {
                        "description": "Payment details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/debts.PayDebtsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated creditor record",
                        "schema": {
                            "$ref": "#/definitions/debts.Debts"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/payment/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details for a specific creditor payment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "Get creditor payment details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details",
                        "schema": {
                            "$ref": "#/definitions/debts.Payment"
                        }
                    },
                    "400": {
                        "description": "Invalid payment ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/payments/{credit_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all payments for a specific creditor record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "List payments by creditor ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Creditor ID",
                        "name": "credit_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments",
                        "schema": {
                            "$ref": "#/definitions/debts.PaymentList"
                        }
                    },
                    "400": {
                        "description": "Invalid creditor ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/payments/{supplier_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all payments made to a specific supplier for creditor records.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "List payments to supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "supplier_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier payment records",
                        "schema": {
                            "$ref": "#/definitions/debts.UserPaymentsRes"
                        }
                    },
                    "400": {
                        "description": "Invalid supplier ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/supplier/{supplier_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve creditor records for a specific supplier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "Get credits records for supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "supplier_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Creditor records for the supplier",
                        "schema": {
                            "$ref": "#/definitions/debts.DebtsList"
                        }
                    },
                    "400": {
                        "description": "Invalid supplier ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/total-sum": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the total amount of creditor records for the company.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "Get total creditor sum",
                "responses": {
                    "200": {
                        "description": "Total creditor sum",
                        "schema": {
                            "$ref": "#/definitions/debts.SumMoney"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/total-sum/{supplier_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the total creditor amount for a specific supplier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "Get supplier's total creditor sum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "supplier_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supplier's total creditor sum",
                        "schema": {
                            "$ref": "#/definitions/debts.SumMoney"
                        }
                    },
                    "400": {
                        "description": "Invalid supplier ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/creditor/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve creditor details using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creditor"
                ],
                "summary": "Get creditor by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Creditor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Creditor details",
                        "schema": {
                            "$ref": "#/definitions/debts.Debts"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve debtor records with optional filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "List debtor records",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by fully paid status",
                        "name": "is_fully_pay",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by currency code",
                        "name": "currency_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by unpaid debts",
                        "name": "no_paid_debts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of debtor records",
                        "schema": {
                            "$ref": "#/definitions/debts.DebtsList"
                        }
                    },
                    "400": {
                        "description": "Invalid filter value",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new debtor record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Create debtor",
                "parameters": [
                    {
                        "description": "Debtor details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DebtsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created debtor record",
                        "schema": {
                            "$ref": "#/definitions/debts.Debts"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/client/{client_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve debtor records for a specific client.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Get client debtor records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Debtor records for the client",
                        "schema": {
                            "$ref": "#/definitions/debts.DebtsList"
                        }
                    },
                    "400": {
                        "description": "Invalid client ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/excel/{currency}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Export debtor records as an Excel file filtered by currency.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Export debts to Excel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency code",
                        "name": "currency",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file with debtor records",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/debts/pay": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Make a payment toward a debtor record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Process debtor payment",
                "parameters": [
                    {
                        "description": "Payment details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.PayDebtReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated debtor record",
                        "schema": {
                            "$ref": "#/definitions/debts.Debts"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/payment/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details for a specific payment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Get payment details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details",
                        "schema": {
                            "$ref": "#/definitions/debts.Payment"
                        }
                    },
                    "400": {
                        "description": "Invalid payment ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/payments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of payments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Bought products for cash or debt",
                "parameters": [
                    {
                        "description": "Sale data",
                        "name": "Sale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.PaymentSale"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.SaleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/payments/{debt_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all payments for a specific debtor record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "List payments by debtor ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Debtor ID",
                        "name": "debt_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments",
                        "schema": {
                            "$ref": "#/definitions/debts.PaymentList"
                        }
                    },
                    "400": {
                        "description": "Invalid debtor ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/payments/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all payments made by a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "List user payments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User payment records",
                        "schema": {
                            "$ref": "#/definitions/debts.UserPaymentsRes"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/total-sum": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the total amount of debtor records for the company.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Get total debtor sum",
                "responses": {
                    "200": {
                        "description": "Total debtor sum",
                        "schema": {
                            "$ref": "#/definitions/debts.SumMoney"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/total-sum/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the total debtor amount for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Get user's total debtor sum",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's total debtor sum",
                        "schema": {
                            "$ref": "#/definitions/debts.SumMoney"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/debts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve debtor details using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debts"
                ],
                "summary": "Get debtor by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Debtor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Debtor details",
                        "schema": {
                            "$ref": "#/definitions/debts.Debts"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of products filtered by branch, category, and other optional parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get a list of products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID to filter products",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Product name to filter by",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Product created_by to filter by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Product name to filter by",
                        "name": "total_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of products to return (default 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/products.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new product with the provided details, including an optional file upload for the product image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Upload product image (optional)",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "ID of the product category",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the product",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Billing format of the product",
                        "name": "bill_format",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Incoming price of the product",
                        "name": "incoming_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Standard price of the product",
                        "name": "standard_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Standard price of the product",
                        "name": "quantity",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product successfully created",
                        "schema": {
                            "$ref": "#/definitions/products.Product"
                        }
                    },
                    "400": {
                        "description": "Invalid input or bad request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/products/bulk/{category_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create multiple products in bulk with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create multiple products",
                "parameters": [
                    {
                        "description": "Bulk product creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateBulkProductsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bulk products successfully created",
                        "schema": {
                            "$ref": "#/definitions/products.BulkCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products/category": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of product categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List Product Categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by category name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by created_by name",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/products.CategoryList"
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new product category by specifying its name and optionally uploading an image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create Product Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload category image (optional)",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Name of the category",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category successfully created",
                        "schema": {
                            "$ref": "#/definitions/products.Category"
                        }
                    },
                    "400": {
                        "description": "Invalid input or bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/products/category/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a product category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get Product Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "$ref": "#/definitions/products.Category"
                        }
                    },
                    "400": {
                        "description": "Invalid input or bad request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a product category by ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update Product Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload category image (optional)",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Name of the category",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully updated",
                        "schema": {
                            "$ref": "#/definitions/products.Category"
                        }
                    },
                    "400": {
                        "description": "Invalid input or bad request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a product category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete Product Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/products.Message"
                        }
                    },
                    "400": {
                        "description": "Invalid input or bad request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/products/dashboard/{currency}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a summary of product statistics (items count, units, delivery price and sale price)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve products dashboard data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Currency type (allowed values: 'uzs', 'usd')",
                        "name": "currency",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/products.GetProductsDashboardRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/products/excel-upload/{category_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload an Excel file containing product data, process it, and create products in bulk",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Upload an Excel file and create products",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Excel file containing products data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sheet name of file",
                        "name": "sheet_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of an existing product by ID, with optional media upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload product image (optional)",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Name of the product",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Billing format",
                        "name": "bill_format",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Total count of products",
                        "name": "quantity",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Incoming price",
                        "name": "incoming_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Standard price",
                        "name": "standard_price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/purchases": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of purchases with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "List all purchases",
                "parameters": [
                    {
                        "type": "string",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "product_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "purchased_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "supplier_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "total_cost",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PurchaseList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new purchase with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Create a new purchase",
                "parameters": [
                    {
                        "description": "Purchase data",
                        "name": "Purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Purchase"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/products.PurchaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/purchases/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a purchase by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Get a purchase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PurchaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of an existing purchase by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Update an existing purchase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated purchase data",
                        "name": "Purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.PurchaseUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PurchaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a purchase by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Delete a purchase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Purchase ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/salary": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List salary records with pagination, sorting and filtering.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "List Salaries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit (set 0 to get all records)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page (set 0 to get all records)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (e.g., salary_date, created_at, salary_amount)",
                        "name": "sort_field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (ASC or DESC)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of salaries",
                        "schema": {
                            "$ref": "#/definitions/user.GetSalaryList"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new salary record for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Create Salary",
                "parameters": [
                    {
                        "description": "Salary Request",
                        "name": "salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SalaryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Salary created successfully",
                        "schema": {
                            "$ref": "#/definitions/user.SalaryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/salary/worker/{worker_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve full information about a worker including user data, current salary, and all adjustments.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Get Worker All Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Worker ID",
                        "name": "worker_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker full info returned",
                        "schema": {
                            "$ref": "#/definitions/user.WorkerAllInfo"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/salary/{salary_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve salary record by salary ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Get Salary by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Salary ID",
                        "name": "salary_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salary data returned",
                        "schema": {
                            "$ref": "#/definitions/user.SalaryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing salary record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment-Salary-User"
                ],
                "summary": "Update Salary",
                "parameters": [
                    {
                        "description": "Salary Update Request",
                        "name": "salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SalaryUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Salary ID",
                        "name": "salary_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salary updated successfully",
                        "schema": {
                            "$ref": "#/definitions/user.SalaryUpdate"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/sales": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of sales with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Get list of sales",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by product_name",
                        "name": "product_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date for filtering (format: YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date for filtering (format: YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Client ID to filter sales",
                        "name": "client_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sold by user ID to filter sales",
                        "name": "sold_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.SaleList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new sale with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Create a new sale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Sale data",
                        "name": "Sale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Sale"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/products.SaleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/sales/calculate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate the total sales based on the sale request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Calculate total sales",
                "parameters": [
                    {
                        "description": "Sale data",
                        "name": "Sale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Sale"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.SaleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/sales/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a sale by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Get a sale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sale ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.SaleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of an existing sale by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Update an existing sale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sale ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated sale data",
                        "name": "Sale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SaleUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.SaleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a sale by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Delete a sale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sale ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/branch-income": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve total income for a branch within a specified date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get branch income",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.BranchIncomeRes"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/cash/net-profit": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate the net profit for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Calculate the net profit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PriceProducts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/cash/total-expense": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate the total expense for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Calculate the total expense",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PriceProducts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/cash/total-income": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate the total income for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Calculate the total income",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PriceProducts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/client-dashboard/{client_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve dashboard data for a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get client dashboard data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.GetClientDashboardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/products/most-sold": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of the most sold products between a given date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get the most sold products by day",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.MostSoldProductsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/products/total-price": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate the total price of all products for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Calculate the total price of products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PriceProducts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/products/total-purchased": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate the total purchase amount of products for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Calculate the total purchase amount of products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PriceProducts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/products/total-sold": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate the total quantity of sold products for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Calculate the total quantity of sold products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.PriceProducts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/sale-statistics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve sales statistics based on a given time period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get sales statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Period (e.g., daily, weekly, monthly)",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.SaleStatistics"
                        }
                    },
                    "400": {
                        "description": "Branch ID is required in the header",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/top-clients": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the top clients for a company based on their purchase value in a given date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get top clients by value of purchases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.GetTopEntitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/statistics/top-suppliers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the top suppliers for a company based on the value of products supplied in a given date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get top suppliers by value of products supplied",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.GetTopEntitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/products.Error"
                        }
                    }
                }
            }
        },
        "/supplier": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of suppliers with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "List all suppliers",
                "parameters": [
                    {
                        "type": "string",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "full_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "phone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ClientListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new supplier with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Create a new supplier",
                "parameters": [
                    {
                        "description": "Supplier data",
                        "name": "Supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ClientRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/supplier/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a supplier by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Get a supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of an existing supplier by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Update an existing supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated supplier data",
                        "name": "Supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a supplier by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Supplier"
                ],
                "summary": "Delete a supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/transfers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of transfers with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Get a list of transfers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transferred By",
                        "name": "transferred_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of products ",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination ",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by product_name",
                        "name": "product_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.TransferList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new transfer between branches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Create a new transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Transfer data",
                        "name": "Transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TransferReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/products.Transfer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/transfers/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a transfer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Get a transfer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transfer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.Transfer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/admin/register": {
            "post": {
                "description": "Register a new admin account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Register an Admin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "description": "Delete a user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/get/access-token": {
            "post": {
                "description": "Get Access token with refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Access Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/get/{id}": {
            "get": {
                "description": "Retrieve user details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/list": {
            "get": {
                "description": "Retrieve a list of users with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List Users",
                "parameters": [
                    {
                        "type": "string",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.UserListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Admin login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Admin Login",
                "parameters": [
                    {
                        "description": "Admin login",
                        "name": "Login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LogInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create user",
                        "name": "CreateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        },
        "/user/update/{id}": {
            "put": {
                "description": "Update user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user",
                        "name": "UpdateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "company.BranchResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branch_id": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "company.CompanyResponse": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "company.CreateBranchRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "company.ListBranchesResponse": {
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/company.BranchResponse"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "company.ListCompanyUsersResponse": {
            "type": "object",
            "properties": {
                "total_count": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/company.UserResponse"
                    }
                }
            }
        },
        "company.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "company.UpdateBranchRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branch_id": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "company.UserResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "debts.Debts": {
            "type": "object",
            "properties": {
                "amount_paid": {
                    "type": "number"
                },
                "balance_of_debt": {
                    "type": "number"
                },
                "client_id": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_phone": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "debt_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_fully_paid": {
                    "type": "boolean"
                },
                "last_payment_date": {
                    "type": "string"
                },
                "sale_id": {
                    "type": "string"
                },
                "should_pay_at": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "debts.DebtsList": {
            "type": "object",
            "properties": {
                "installments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/debts.Debts"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "debts.Money": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "debts.PayDebtsReq": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "debt_id": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "number"
                },
                "pay_type": {
                    "type": "string"
                }
            }
        },
        "debts.Payment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "installment_id": {
                    "type": "string"
                },
                "pay_type": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number"
                },
                "payment_date": {
                    "type": "string"
                }
            }
        },
        "debts.PaymentList": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/debts.Payment"
                    }
                }
            }
        },
        "debts.Payments": {
            "type": "object",
            "properties": {
                "debt_id": {
                    "type": "string"
                },
                "pay_type": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number"
                },
                "payment_date": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "string"
                }
            }
        },
        "debts.SumMoney": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "sum": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/debts.Money"
                    }
                }
            }
        },
        "debts.UserPaymentsRes": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/debts.Payments"
                    }
                }
            }
        },
        "entity.AdjustmentRequest": {
            "type": "object",
            "properties": {
                "adjustment_date": {
                    "type": "string"
                },
                "adjustment_type": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "currency_code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity.AdjustmentUpdate": {
            "type": "object",
            "properties": {
                "adjustment_date": {
                    "type": "string"
                },
                "adjustment_type": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "currency_code": {
                    "type": "string"
                }
            }
        },
        "entity.Client": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "client_type": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "entity.ClientRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "entity.CreateBulkProductsRequest": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.CreateProductRequestBulk"
                    }
                }
            }
        },
        "entity.CreateCompanyRequest": {
            "type": "object",
            "properties": {
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "entity.CreateProductRequestBulk": {
            "type": "object",
            "properties": {
                "bill_format": {
                    "type": "string"
                },
                "incoming_price": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "standard_price": {
                    "type": "number"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "entity.CreateUserToCompanyRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "default": "user"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.DebtsRequest": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "should_pay_at": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "entity.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "entity.PayDebtReq": {
            "type": "object",
            "properties": {
                "debt_id": {
                    "type": "string"
                },
                "paid_amount": {
                    "type": "number"
                }
            }
        },
        "entity.PaymentSale": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "is_fully_debt": {
                    "type": "boolean"
                },
                "paid_amount": {
                    "type": "number"
                },
                "payment_method": {
                    "type": "string"
                },
                "sold_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.SalesItem"
                    }
                }
            }
        },
        "entity.Purchase": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PurchaseItem"
                    }
                },
                "payment_method": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "string"
                }
            }
        },
        "entity.PurchaseItem": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "purchase_price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "entity.PurchaseUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "string"
                }
            }
        },
        "entity.SalaryRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency_code": {
                    "type": "string"
                },
                "salary_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity.SalaryUpdate": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency_code": {
                    "type": "string"
                },
                "salary_date": {
                    "type": "string"
                }
            }
        },
        "entity.Sale": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_phone": {
                    "type": "string"
                },
                "is_for_debt": {
                    "type": "boolean",
                    "default": false
                },
                "paid_amount": {
                    "type": "number"
                },
                "payment_method": {
                    "type": "string"
                },
                "sold_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SalesItem"
                    }
                }
            }
        },
        "entity.SaleUpdate": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                }
            }
        },
        "entity.SalesItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "sale_id": {
                    "type": "string"
                },
                "sale_price": {
                    "type": "number"
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "entity.TransferReq": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.TransfersProductsReq"
                    }
                },
                "to_branch_id": {
                    "type": "string"
                }
            }
        },
        "entity.TransfersProductsReq": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "product_quantity": {
                    "type": "integer"
                }
            }
        },
        "entity.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "entity.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "handler.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "products.BranchIncomeData": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "ID филиала",
                    "type": "string"
                },
                "values": {
                    "description": "Список доходов по методам оплаты",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.Price"
                    }
                }
            }
        },
        "products.BranchIncomeRes": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Доходы по филиалам",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.BranchIncomeData"
                    }
                },
                "total": {
                    "description": "Общий доход по всем филиалам",
                    "type": "number"
                }
            }
        },
        "products.BulkCreateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.Product"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "products.CashFlow": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "branch_id": {
                    "description": "Added branch_id",
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "transaction_date": {
                    "type": "string"
                },
                "transaction_type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "products.CashFlowRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "branch_id": {
                    "description": "Added branch_id",
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "products.Category": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Added branch_id",
                    "type": "string"
                },
                "company_id": {
                    "description": "Company ID added",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "products.CategoryList": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.Category"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "products.DailySales": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "total_quantity": {
                    "type": "integer"
                }
            }
        },
        "products.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "products.GetClientDashboardResponse": {
            "type": "object",
            "properties": {
                "average_discount": {
                    "type": "number"
                },
                "average_product_count": {
                    "type": "number"
                },
                "average_receipt": {
                    "type": "number"
                },
                "top_transaction": {
                    "type": "number"
                },
                "total_purchase_sum": {
                    "type": "number"
                },
                "visit_count": {
                    "type": "integer"
                }
            }
        },
        "products.GetProductsDashboardRes": {
            "type": "object",
            "properties": {
                "amount_delivery_price": {
                    "type": "number"
                },
                "amount_sale_price": {
                    "type": "number"
                },
                "product_items": {
                    "type": "integer"
                },
                "product_units": {
                    "type": "integer"
                }
            }
        },
        "products.GetTopEntitiesResponse": {
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.TopEntity"
                    }
                }
            }
        },
        "products.ListCashFlow": {
            "type": "object",
            "properties": {
                "cash": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.CashFlow"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "products.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "products.MostSoldProductsResponse": {
            "type": "object",
            "properties": {
                "daily_sales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.DailySales"
                    }
                }
            }
        },
        "products.Price": {
            "type": "object",
            "properties": {
                "many_type": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "products.PriceProducts": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Added branch_id",
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "sum": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.Price"
                    }
                }
            }
        },
        "products.Product": {
            "type": "object",
            "properties": {
                "bill_format": {
                    "type": "string"
                },
                "branch_id": {
                    "description": "Added branch_id",
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "company_id": {
                    "description": "Company ID added",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "incoming_price": {
                    "description": "Changed to double",
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "standard_price": {
                    "description": "Changed to double",
                    "type": "number"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "products.PurchaseItemResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "product_image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "purchase_id": {
                    "type": "string"
                },
                "purchase_price": {
                    "description": "Changed to double",
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "total_price": {
                    "description": "Changed to double",
                    "type": "number"
                }
            }
        },
        "products.PurchaseList": {
            "type": "object",
            "properties": {
                "purchases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.PurchaseResponse"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "products.PurchaseResponse": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Added branch_id",
                    "type": "string"
                },
                "company_id": {
                    "description": "Company ID added",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.PurchaseItemResponse"
                    }
                },
                "payment_method": {
                    "type": "string"
                },
                "purchased_by": {
                    "type": "string"
                },
                "purchaser_phone_number": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "string"
                },
                "supplier_name": {
                    "type": "string"
                },
                "total_cost": {
                    "description": "Changed to double",
                    "type": "number"
                }
            }
        },
        "products.SaleList": {
            "type": "object",
            "properties": {
                "sales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.SaleResponse"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "products.SaleResponse": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Added branch_id",
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_phone_number": {
                    "type": "string"
                },
                "company_id": {
                    "description": "Company ID added",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "sold_by": {
                    "type": "string"
                },
                "sold_by_name": {
                    "type": "string"
                },
                "sold_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.SalesItem"
                    }
                },
                "total_sale_price": {
                    "description": "Changed to double",
                    "type": "number"
                }
            }
        },
        "products.SaleStatistics": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.SaleStatisticsDate"
                    }
                },
                "time_period": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "products.SaleStatisticsDate": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.Price"
                    }
                }
            }
        },
        "products.SalesItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "product_image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "sale_id": {
                    "type": "string"
                },
                "sale_price": {
                    "description": "Changed to double",
                    "type": "number"
                },
                "total_price": {
                    "description": "Changed to double",
                    "type": "number"
                }
            }
        },
        "products.TopEntity": {
            "type": "object",
            "properties": {
                "supplier_id": {
                    "type": "string"
                },
                "total_value": {
                    "description": "Total value of products purchased",
                    "type": "number"
                }
            }
        },
        "products.Transfer": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "from_branch_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.TransfersProducts"
                    }
                },
                "to_branch_id": {
                    "type": "string"
                },
                "transferred_by": {
                    "type": "string"
                }
            }
        },
        "products.TransferList": {
            "type": "object",
            "properties": {
                "total_count": {
                    "type": "integer"
                },
                "transfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/products.Transfer"
                    }
                }
            }
        },
        "products.TransfersProducts": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "product_image": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_quantity": {
                    "type": "integer"
                }
            }
        },
        "user.Adjustment": {
            "type": "object",
            "properties": {
                "adjustment_date": {
                    "type": "string"
                },
                "adjustment_id": {
                    "type": "string"
                },
                "adjustment_type": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.AdjustmentList": {
            "type": "object",
            "properties": {
                "adjustments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.AdjustmentResponse"
                    }
                }
            }
        },
        "user.AdjustmentResponse": {
            "type": "object",
            "properties": {
                "adjustment_date": {
                    "type": "string"
                },
                "adjustment_id": {
                    "type": "string"
                },
                "adjustment_type": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.ClientListResponse": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.ClientResponse"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "user.ClientResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.GetSalaryList": {
            "type": "object",
            "properties": {
                "salaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.SalaryResponse"
                    }
                }
            }
        },
        "user.LogInRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "user.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "user.Salary": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency_code": {
                    "type": "string"
                },
                "salary_date": {
                    "type": "string"
                },
                "salary_id": {
                    "type": "string"
                }
            }
        },
        "user.SalaryResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "salary_date": {
                    "type": "string"
                },
                "salary_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.SalaryUpdate": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "company_id": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "salary_date": {
                    "type": "string"
                },
                "salary_id": {
                    "type": "string"
                }
            }
        },
        "user.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expire_at": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.UserListResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.UserResponse"
                    }
                }
            }
        },
        "user.UserResponse": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.WorkerAllInfo": {
            "type": "object",
            "properties": {
                "adjustments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.Adjustment"
                    }
                },
                "company_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "salary": {
                    "$ref": "#/definitions/user.Salary"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "API Gateway",
	Description:      "This is a sample server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
